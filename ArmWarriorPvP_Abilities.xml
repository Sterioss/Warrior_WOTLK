-- Spell to code now on a priority basis
--[[ Rotation : Rend, MS, Execute on proc/death, Overpower
---- Buffs : Battle Shout / Commanding Shout
---- Debuffs : Piercing Howl / Hamstring
---- Bursts : Recklessness
---- Defensives : Enraged Regeneration / Retaliation / Disarm / Shield Wall / Spell Reflection
---- Interrupt : Shield Bash / Pummel
---- Break Shields : Shattering Throw
---- Pets : Taunts
---- Range : Intercept / Charge
---- Stance management
---- AoE ~~
---- Berserker Rage usage (fear / damage takens)
if ( talents.armored_to_the_teeth )
  action_list_str += "/indestructible_potion";
action_list_str += "/bloodrage,rage<=65";
action_list_str += "/heroic_strike,rage>=50";
action_list_str += "/rend";
action_list_str += "/overpower,if=buff.taste_for_blood.remains<1.5";
action_list_str += "/bladestorm";
action_list_str += "/mortal_strike";
action_list_str += "/overpower,if=buff.taste_for_blood.react";
action_list_str += "/execute,health_percentage>=20,if=buff.sudden_death.react";
action_list_str += "/execute,health_percentage<=20";
action_list_str += "/slam";
}
]]

if inCombat() then
  if canCast("target",1715) and not isSlowed("target") and UnitIsPVP("target") then
    CastSpellById(1715)
    -- bloodrage
  elseif canCast("player",2687) and rage() <= 65 and getHp("player") >= 65 then
    CastSpellById(2687)
    -- heroic strike rage >=50
  elseif canCast("target",47450) and rage() >= 50 then
    CastSpellById(47450)
    -- rend
  elseif canCast("target",47465) and not UnitDebuffID("target",47465) then
    CastSpellById(47465)
    -- exec on proc
  elseif canCast()


else


end

function canCast(tar,spellid)
  if UnitCastingInfo("player") == nil and UnitChannelInfo("player") == nil
  --and IsPlayerSpell(spellid) == true
  and cdRemains(spellid) == 0 then
    if tar ~= nil and rangeCheck(spellid,tar) == nil then
      return false
    elseif tar ~= nil and rangeCheck(spellid,tar) == true then
      return true
    elseif tar == nil then
      return true
    else
      return false
    end
  end
end

--Function Check Snares--
local PvPslows 			= {
  45524,			-- Chains of Ice
  50435,			-- Chilblains
  50259,			-- Dazed
  58180,			-- Infected Wounds
  5116,			-- Concussive Shot
  120,				-- Cone of Cold
  116,				-- Frostbolt
  44614,			-- Frostfire Bolt
  3409,			-- Crippling Poison
  8056,			-- Frost Shock
  51490,		-- Thunderstorm
  1715,			-- Hamstring
  1604,			-- Dazed
  12323,    -- Piercing Howl
}
function isSlowed(unit)
  for i=1,#PvPslows do
    if UnitDebuffID(unit,PvPslows[i]) ~= nil
    then
      return true
    end
  end
end

-- rage amount
function rage()
  return UnitPower("player")
end

--Combat Check--
function inCombat()
  if UnitAffectingCombat("player") ~= nil
  then
    return true
  end
end

--Get HP simple--
function getHp(unit)
  if UnitExists(unit) ~= nil
  then
    return 100 * UnitHealth(unit) / UnitHealthMax(unit)
  end
end

--Range Check Simple--
function rangeCheck(spellid,unit)
  if IsSpellInRange(GetSpellInfo(spellid),unit) == 1
  then
    return true
  end
end

--Amount of Cooldown that remains--
function cdRemains(spellid)
  if select(2,GetSpellCooldown(spellid)) + (select(1,GetSpellCooldown(spellid))
  - GetTime()) > 0 then
    return select(2,GetSpellCooldown(spellid)) +
    (select(1,GetSpellCooldown(spellid)) - GetTime())
  else
    return 0
  end
end

function inMelee()
  if UnitAffectingCombat("player") ~= nil
  and IsSpellInRange(GetSpellInfo(47450),"target") == 1
  and UnitExists("target") ~= nil
  and UnitCanAttack("player","target") ~= nil
  then return true
  end
end
